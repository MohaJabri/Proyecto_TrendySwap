name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install
      working-directory: ./Frontend

    - name: Build
      run: npm run build
      working-directory: ./Frontend

    - name: Log in to Docker Hub
      uses: docker/login-action@v4
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: mohajabri/trendyswap_front

    - name: Copy SSL Key
      uses: mobiledevops/secret-to-file-action@v1
      with:
        base64-encoded-secret: ${{ secrets.SSL_KEY }}
        filename: "server.key"
        is-executable: false
        working-directory: ./Frontend

    - name: Copy SSL PEM
      uses: mobiledevops/secret-to-file-action@v1
      with:
        base64-encoded-secret: ${{ secrets.SSL_PEM }}
        filename: "server.pem"
        is-executable: false
        working-directory: ./Frontend

    - name: Build and push Docker images
      id: push
      uses: docker/build-push-action@v4
      with:
        context: ./Frontend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Execute remote SSH commands
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          docker rm -f trendyfront || true
          docker pull mohajabri/trendyswap_front:latest
          docker run -d --name trendyfront -p 80:80 -p 443:443 mohajabri/trendyswap_front:latest

  build_backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v4
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: mohajabri/trendyswap_back

    - name: Copy SSL Key
      uses: mobiledevops/secret-to-file-action@v1
      with:
        base64-encoded-secret: ${{ secrets.SSL_KEY }}
        filename: "server.key"
        is-executable: false
        working-directory: ./Backend

    - name: Copy SSL PEM
      uses: mobiledevops/secret-to-file-action@v1
      with:
        base64-encoded-secret: ${{ secrets.SSL_PEM }}
        filename: "server.pem"
        is-executable: false
        working-directory: ./Backend

    - name: Build and push Docker images
      id: push
      uses: docker/build-push-action@v4
      with:
        context: ./Backend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          SERVER_PORT=${{ secrets.DJANGO_SERVER_PORT }}
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          DB_ENGINE=${{ secrets.DB_ENGINE }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          EMAIL_BACKEND=${{ secrets.DJANGO_EMAIL_BACKEND }}
          EMAIL_HOST=${{ secrets.DJANGO_EMAIL_HOST }}
          EMAIL_PORT=${{ secrets.DJANGO_EMAIL_PORT }}
          EMAIL_HOST_USER=${{ secrets.DJANGO_EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD=${{ secrets.DJANGO_EMAIL_HOST_PASSWORD }}
          EMAIL_USE_TLS=${{ secrets.DJANGO_EMAIL_USE_TLS }}

    - name: Execute remote SSH commands
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          docker rm -f trendyback || true
          docker pull mohajabri/trendyswap_back:latest
          docker run -d --name trendyback -p 8000:8000 mohajabri/trendyswap_back:latest
